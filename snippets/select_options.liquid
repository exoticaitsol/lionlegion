<!-- start select_options.liquid (SNIPPET) -->
<div class="swatch   swatch-standard" data-section-type="swatch">
    {%- if product.variants.size > 1 -%}
        {%- for product_option in product.options_with_values -%}
            {%- assign swatch_on = false -%}
            {%- assign swatch_index = forloop.index -%}
            
            
            
            <div class="swatch-type" data-type="{{ product_option.name }}" data-index="{{ forloop.index }}">
                <label class="product-form-label"><strong>{{ product_option.name }}</strong></label>
                <div class="swatch-elements-options">
                    <div class="swatch-elements-wrapper {% if block.settings.swatch_enabled_color == true or block.settings.swatch_enabled_standard or block.settings.swatch_enabled_style %}no-swatch{% endif %} {% unless swatch_on %}full{% endunless %}">
                        {%- unless swatch_on -%}
                            {%- render 'select-swatch', values: product_option.values, swatch_index: swatch_index, title_standard: product_option.name -%}
                        {%- endunless -%}
                    </div>
                </div>
            </div>
        {%- endfor -%}

        {%- render 'size-chart-link' -%}
    {%- endif -%}

    <select id="product-select-{{ product.id }}" name="id" class="product-variant all-variant hide" data-productid="{{product.id}}">
        {%- for variant in product.variants -%}
            {%- if variant.available -%}
                <option {%- if variant.selected -%} selected {%- endif -%}
                    value="{{ variant.id }}"
                    data-options="{{ variant.options | join: ',' }}"
                    data-sku="{{ variant.sku }}"
                    data-price="{{ variant.price }}"
                    variant-inventory = "{{ variant.inventory_management }}"
                    inventory_policy = "{{ variant.inventory_policy }} "
                    data-inventory="{% if variant.inventory_policy == 'continue' or variant.inventory_management == blank %} -1 {% else %}  {{ variant.inventory_quantity }} {% endif %}"
                    data-compare-at-price="{{ variant.compare_at_price }}"
                    data-image="{{ variant.image.src | image_url: width: 800 | split: '?' | first }}">
                        {{ variant.title }} / {{ variant.price | money }}
                </option>
            {%- endif -%}
        {%- endfor -%}
    </select>
</div>
<script>

    /**
    * @param variants
    */
    function prepare_variants(variants) {
        var variations = [];

        variants.each(function () {
            variations.push(jQuery(this).val());
        });

        return variations;
    }

    /**
    *
    */
    function get_variation(all_variants, options) {
        var variations = [];

        options = options.join(',');
        variations = jQuery(all_variants).find('option[data-options="' + options + '"]');

        if (variations.length > 0)
            jQuery(all_variants).val(variations.val()).trigger('change');
    }

    /**
    * Check this function
    */
    function filter_variants(Product, options, option_current, swatch_index, enable_atc_button) {
        var swatch_type = jQuery('.swatch-type[data-index="' + (swatch_index + 1) + '"]');

        if (typeof Product.variations[option_current] !== 'undefined'){
            change_swatch_variants( swatch_type, Object.keys(Product.variations[option_current]), enable_atc_button );
        }else if (typeof Product.variations[options[0]] !== 'undefined' && typeof Product.variations[options[0]][option_current] !== 'undefined'){
            change_swatch_variants( swatch_type, Product.variations[options[0]][option_current], enable_atc_button );
        }
    }

    /**
    *
    */
    function change_swatch_variants(swatch, variants, enable_atc_button) {
        var first_select_value,
            swatch_select = swatch.find('.product-variant option'),
            swatch_radio  = swatch.find('.swatch-variant-value');

        jQuery('.product-variant', swatch).prop('disabled', false);
        //swatch_radio.parent().addClass('swatch-disabled');

        // BEGIN_TAG_SELECT
            swatch_select.prop({
                disabled: true,
                checked: false
            });

            swatch_select.each(function(){
                if (variants.indexOf(jQuery(this).val()) > -1) {
                    jQuery(this).prop('disabled', false);
                }
            });

            first_select_value = swatch_select.filter(':not(:disabled):first').val();

            if (enable_atc_button)
                swatch_select.parent().val(first_select_value).trigger('change');
        // END_TAG_SELECT

        // BEGIN_RADIO_BUTTON
            swatch_radio.prop({
                disabled: true,
                checked: false
            });

            swatch_radio.each(function(i){
                if (variants.indexOf(jQuery(this).val()) > -1) {
                    jQuery(this).prop('disabled', false);
                    jQuery(this).parent().removeClass('swatch-disabled');
                }
            });

            if (enable_atc_button)
                swatch_radio.filter(':not(:disabled):first').trigger('click');
        // END_RADIO_BUTTON

        swatch.prev().find('.choose-option').removeClass('choose-option');
    }

    function choose_before_option( i ) {
        jQuery('.swatch-type[data-index="'+ i +'"] .swatch-element').on('click', function(){
            var swatch_checkeds = jQuery('.swatch-type[data-index="'+ (i - 1) +'"] input:checked').length;
            var swatch_selects = typeof jQuery('.swatch-type[data-index="'+ (i - 1) +'"] select').val() !== 'undefined' && jQuery('.swatch-type[data-index="'+ (i - 1) +'"] select').val() !== '';

            jQuery('.swatch-type.swatch-elements-wrapper').removeClass('choose-option');

            if (swatch_checkeds === 0 && swatch_selects === false) {
                jQuery('.swatch-type[data-index="'+ (i - 1) +'"] .swatch-elements-wrapper').addClass('choose-option');
            }
        });
    }
document.addEventListener("DOMContentLoaded", function(event) {
    var _quantity = jQuery('.product-quantity-wrapper > .quantity'),
                _product_featured = jQuery('.jq-featured-slider'),
                _add_to_cart_value = jQuery('.btn-add-tocart > .btn-money'),
                _product_options = jQuery('.jq-swatch-element,.jq-product-variant'),
                _current_price = jQuery('.product-price .current-price'),
                _current_compare_price = jQuery('.product-price .compare-price'),
                _choosed_variant = jQuery('.all-variant'),
                _price = jQuery(':selected', _choosed_variant).attr('data-price'),
                _global_variant_compare_at_price = jQuery(':selected', jQuery('.all-variant')).attr('data-compare-at-price') === "" ? "" : Shopify.formatMoney(jQuery(':selected', jQuery('.all-variant')).attr('data-compare-at-price'));


            jQuery('.swatch-type[data-index="1"] .swatch-element').each(function(){
                if (Object.keys(VastaShop.Product.current.variations).indexOf(jQuery(this).attr('data-swatch')) > -1) {
                    jQuery(this).removeClass('swatch-disabled').find('input').prop('disabled', false);
                } else {
                    jQuery(this).find(".tooltip").remove();
                    jQuery(this).append(jQuery('<span class="tooltip">{{ settings.out_of_stock_label }}</span>'));
                }
            });

            jQuery('.swatch-type[data-index="1"] .jq-product-variant option').each(function(){
                if (Object.keys(VastaShop.Product.current.variations).indexOf(jQuery(this).attr('value')) < 0 && jQuery(this).attr('value') !== '') {
                    jQuery(this).prop('disabled', true);
                }
            });

            // Product Options
            _product_options.change(function(){
                var options = prepare_variants(jQuery('.jq-product-variant option:selected,.swatch-variant-value:checked'));

                get_variation(_choosed_variant, options);

                jQuery(this).parent().removeClass('choose-option');

                // Filter Variants
                filter_variants(VastaShop.Product.current, options, jQuery(this).val(), parseInt(jQuery(this).attr('data-swatch-index')), (options.length == VastaShop.Product.current.options.length) );

                if (options.length === VastaShop.Product.current.options.length) {
                    jQuery('.btn-add-tocart').prop('disabled', false);
                    jQuery('.product-form-buttons-wrapper,.btn-add-tocart').removeClass('hide');
                    jQuery('.btn-choose-variant').addClass('hide');
                    enableInputs(jQuery('.all-variant option:selected').val());
                    if(parseInt(VastaShop.Variables._input_qtd.val()) == 1){
                        VastaShop.Variables._bt_minus.attr('disabled','disabled');
                    }
                }

                return false;
            });

            if (VastaShop.Product.options.length > 0) {
                VastaShop.Product.options.forEach(function(option, i){
                    jQuery('.swatch-element[data-swatch="' + option + '"]').trigger('click');
                    jQuery('.product-variant option[value="' + option + '"]').parent().val(option).trigger('change');
                });
            }



            // Choosed Variant
            _choosed_variant.change(function() {
                var variant_id = jQuery(':selected', this).val();
                var variant_image = jQuery(':selected', this).attr('data-image');
                var variant_price = jQuery(':selected', this).attr('data-price');
                var variant_inventory = parseInt(jQuery(':selected', this).attr('data-inventory'));
                var variant_compare_at_price = jQuery(':selected', this).attr('data-compare-at-price') === "" ? "" : Shopify.formatMoney(jQuery(':selected', this).attr('data-compare-at-price')) ;

                jQuery('.slick-slide:not(.slick-cloned) img').each(function(){

                    var slick_image = jQuery(this),
                        slick_index = slick_image.parent().parent().parent().parent().attr('data-slick-index');
                    if (slick_image.parent().attr('data-src') == variant_image) {
                        _product_featured.slick('slickGoTo', slick_index);
                    }
                });

                _current_price.html(Shopify.formatMoney(variant_price));
                _current_compare_price.html(variant_compare_at_price);

                _price = jQuery(':selected', _choosed_variant).attr('data-price');
                _add_to_cart_value.html(Shopify.formatMoney(parseInt(_quantity.val()) * _price));

                //_quantity.attr('max', variant_inventory);
                inventoryControl(variant_id);
                if (_quantity.val() > variant_inventory ){
                    _quantity.val( 1 );
                }

                enableInputs(variant_id);

                jQuery('#upsell').removeAttr('disabled');

                if (parseInt(_quantity.val()) == 1 ){
                    _quantity.siblings('.btn-minus').attr('disabled','disabled');

                }

                _upsell = jQuery('#upsell'),
                upsell_price = parseInt(_upsell.data('price')),
                quantity = parseInt(jQuery('#ProductQuantity').val()),
                price    = parseInt(jQuery('.product-variant[name="id"] option:selected').data('price'));


                if (_upsell.is(':checked')){
                    _add_to_cart_value.text(Shopify.formatMoney(price * parseInt(jQuery('#ProductQuantity').val()) + upsell_price));
                }else{
                    _add_to_cart_value.text(Shopify.formatMoney(price * quantity));
                }

            });

            if (prepare_variants(jQuery('.swatch-variant-value:checked', jQuery('.swatch-element'))).length == VastaShop.Product.current.options.length) {
                _current_price.html(Shopify.formatMoney(jQuery(':selected', _choosed_variant).attr('data-price')));
                _current_compare_price.html(_global_variant_compare_at_price);

                jQuery('#upsell').removeAttr('disabled');

                _add_to_cart_value.html(Shopify.formatMoney(parseInt(_quantity.val()) * _price));
            }

            jQuery('.modal-close').click(function(){
                jQuery('.modal-container').removeClass('active');
            });

            jQuery(window).click(function(e){
                if (e.target == jQuery('.modal-container').get(0))
                jQuery('.modal-container').removeClass('active');
            });

            for (var i = 2, j = VastaShop.Product.current.options.length+1; i < j; i++) {
                choose_before_option( i );
            }


});

</script>
